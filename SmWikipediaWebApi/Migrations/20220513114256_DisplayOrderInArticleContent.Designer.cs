// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmWikipediaWebApi.Entities;

namespace SmWikipediaWebApi.Migrations
{
    [DbContext(typeof(WikipediaDbContext))]
    [Migration("20220513114256_DisplayOrderInArticleContent")]
    partial class DisplayOrderInArticleContent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("SmWikipediaWebApi.Entities.Administrator", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("SmWikipediaWebApi.Entities.Article", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("SmWikipediaWebApi.Entities.ArticleContent", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<short>("ArticleId")
                        .HasColumnType("smallint");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("DisplayOrder")
                        .HasMaxLength(255)
                        .HasColumnType("smallint");

                    b.Property<string>("SectionName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleContents");
                });

            modelBuilder.Entity("SmWikipediaWebApi.Entities.Comment", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<short>("ArticleId")
                        .HasColumnType("smallint");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SmWikipediaWebApi.Entities.Gallery", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<short>("ArticleId")
                        .HasColumnType("smallint");

                    b.Property<string>("ImageDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Galleries");
                });

            modelBuilder.Entity("SmWikipediaWebApi.Entities.ArticleContent", b =>
                {
                    b.HasOne("SmWikipediaWebApi.Entities.Article", "Article")
                        .WithMany("ArticleContent")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("SmWikipediaWebApi.Entities.Comment", b =>
                {
                    b.HasOne("SmWikipediaWebApi.Entities.Article", "Article")
                        .WithMany("Comment")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("SmWikipediaWebApi.Entities.Gallery", b =>
                {
                    b.HasOne("SmWikipediaWebApi.Entities.Article", "Article")
                        .WithMany("Gallery")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("SmWikipediaWebApi.Entities.Article", b =>
                {
                    b.Navigation("ArticleContent");

                    b.Navigation("Comment");

                    b.Navigation("Gallery");
                });
#pragma warning restore 612, 618
        }
    }
}
